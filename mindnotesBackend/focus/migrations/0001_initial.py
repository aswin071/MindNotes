# Generated by Django 5.2.7 on 2025-10-07 09:34

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FocusProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time at which the row was created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time at which the row was last updated', verbose_name='Updated At')),
                ('deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=100)),
                ('program_type', models.CharField(choices=[('14_day', '14-Day Program'), ('30_day', '30-Day Program'), ('custom', 'Custom Program')], max_length=20)),
                ('description', models.TextField()),
                ('duration_days', models.IntegerField()),
                ('objectives', models.JSONField(default=list)),
                ('daily_tasks', models.JSONField(default=list)),
                ('is_pro_only', models.BooleanField(default=True)),
                ('icon', models.CharField(blank=True, max_length=50)),
                ('color', models.CharField(default='#3B82F6', max_length=7)),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='focus_programs/')),
                ('order', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'focus_programs',
                'ordering': ['order', 'duration_days'],
            },
        ),
        migrations.CreateModel(
            name='FocusSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time at which the row was created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time at which the row was last updated', verbose_name='Updated At')),
                ('deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('session_type', models.CharField(choices=[('pomodoro', 'Pomodoro'), ('custom', 'Custom Duration'), ('program', 'Program Session')], default='custom', max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('paused', 'Paused'), ('canceled', 'Canceled')], default='active', max_length=20)),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('duration_minutes', models.IntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='focus_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'focus_sessions',
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='FocusPause',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time at which the row was created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time at which the row was last updated', verbose_name='Updated At')),
                ('deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('paused_at', models.DateTimeField(auto_now_add=True)),
                ('resumed_at', models.DateTimeField(blank=True, null=True)),
                ('pause_duration', models.IntegerField(default=0, help_text='Pause duration in seconds')),
                ('reason', models.CharField(blank=True, max_length=100)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pauses', to='focus.focussession')),
            ],
            options={
                'db_table': 'focus_pauses',
                'ordering': ['paused_at'],
            },
        ),
        migrations.CreateModel(
            name='ProgramDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time at which the row was created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time at which the row was last updated', verbose_name='Updated At')),
                ('deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('day_number', models.IntegerField()),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('focus_duration', models.IntegerField(help_text='Recommended focus time in minutes')),
                ('tasks', models.JSONField(default=list)),
                ('tips', models.JSONField(default=list)),
                ('reflection_prompts', models.JSONField(default=list)),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='days', to='focus.focusprogram')),
            ],
            options={
                'db_table': 'program_days',
                'ordering': ['program', 'day_number'],
                'unique_together': {('program', 'day_number')},
            },
        ),
        migrations.AddField(
            model_name='focussession',
            name='program_day',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='focus.programday'),
        ),
        migrations.CreateModel(
            name='UserFocusProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time at which the row was created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time at which the row was last updated', verbose_name='Updated At')),
                ('deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('not_started', 'Not Started'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('paused', 'Paused')], default='not_started', max_length=20)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('paused_at', models.DateTimeField(blank=True, null=True)),
                ('current_day', models.IntegerField(default=1)),
                ('total_focus_minutes', models.IntegerField(default=0)),
                ('days_completed', models.IntegerField(default=0)),
                ('completion_percentage', models.FloatField(default=0.0)),
                ('current_streak', models.IntegerField(default=0)),
                ('longest_streak', models.IntegerField(default=0)),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='focus.focusprogram')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_focus_programs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_focus_programs',
                'ordering': ['-started_at'],
            },
        ),
        migrations.AddField(
            model_name='focussession',
            name='user_program',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='focus.userfocusprogram'),
        ),
        migrations.CreateModel(
            name='UserProgramDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time at which the row was created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time at which the row was last updated', verbose_name='Updated At')),
                ('deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('focus_minutes', models.IntegerField(default=0)),
                ('reflection_responses', models.JSONField(default=dict)),
                ('notes', models.TextField(blank=True)),
                ('difficulty_rating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('program_day', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='focus.programday')),
                ('user_program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='day_completions', to='focus.userfocusprogram')),
            ],
            options={
                'db_table': 'user_program_days',
                'ordering': ['program_day__day_number'],
            },
        ),
        migrations.CreateModel(
            name='FocusGoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time at which the row was created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time at which the row was last updated', verbose_name='Updated At')),
                ('deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('goal_type', models.CharField(choices=[('daily', 'Daily Goal'), ('weekly', 'Weekly Goal'), ('monthly', 'Monthly Goal'), ('custom', 'Custom Goal')], max_length=20)),
                ('target_minutes', models.IntegerField(help_text='Target focus minutes')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('current_minutes', models.IntegerField(default=0)),
                ('is_achieved', models.BooleanField(default=False)),
                ('achieved_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='focus_goals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'focus_goals',
                'ordering': ['-start_date'],
                'indexes': [models.Index(fields=['user', 'goal_type', '-start_date'], name='focus_goals_user_id_35640a_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='userfocusprogram',
            index=models.Index(fields=['user', 'status'], name='user_focus__user_id_c44868_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='userfocusprogram',
            unique_together={('user', 'program', 'started_at')},
        ),
        migrations.AddIndex(
            model_name='focussession',
            index=models.Index(fields=['user', '-start_time'], name='focus_sessi_user_id_24ee4c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='userprogramday',
            unique_together={('user_program', 'program_day')},
        ),
    ]
