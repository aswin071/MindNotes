# Generated by Django 5.2.7 on 2025-10-07 09:34

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('prompts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EntryTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time at which the row was created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time at which the row was last updated', verbose_name='Updated At')),
                ('deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('content', models.TextField()),
                ('usage_count', models.IntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entry_templates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'entry_templates',
                'ordering': ['-usage_count', 'name'],
            },
        ),
        migrations.CreateModel(
            name='JournalEntry',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time at which the row was created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time at which the row was last updated', verbose_name='Updated At')),
                ('deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=255)),
                ('content', models.TextField(blank=True)),
                ('entry_type', models.CharField(choices=[('text', 'Text'), ('voice', 'Voice'), ('photo', 'Photo'), ('mixed', 'Mixed')], default='text', max_length=20)),
                ('entry_date', models.DateTimeField()),
                ('privacy', models.CharField(choices=[('private', 'Private'), ('public', 'Public')], default='private', max_length=20)),
                ('is_favorite', models.BooleanField(default=False)),
                ('is_archived', models.BooleanField(default=False)),
                ('location_name', models.CharField(blank=True, max_length=255)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('weather', models.CharField(blank=True, max_length=50)),
                ('temperature', models.FloatField(blank=True, null=True)),
                ('word_count', models.IntegerField(default=0)),
                ('character_count', models.IntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='journal_entries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'journal entry',
                'verbose_name_plural': 'journal entries',
                'db_table': 'journal_entries',
                'ordering': ['-entry_date'],
            },
        ),
        migrations.CreateModel(
            name='JournalPromptResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time at which the row was created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time at which the row was last updated', verbose_name='Updated At')),
                ('deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('question', models.TextField()),
                ('answer', models.TextField()),
                ('entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prompt_responses', to='journals.journalentry')),
                ('prompt', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='prompts.dailyprompt')),
            ],
            options={
                'db_table': 'journal_prompt_responses',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='JournalVoiceNote',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time at which the row was created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time at which the row was last updated', verbose_name='Updated At')),
                ('deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('audio_file', models.FileField(upload_to='journal_entries/voice/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['mp3', 'wav', 'm4a', 'ogg'])])),
                ('duration', models.IntegerField(help_text='Duration in seconds')),
                ('file_size', models.IntegerField(help_text='File size in bytes')),
                ('transcription', models.TextField(blank=True)),
                ('transcription_language', models.CharField(default='en', max_length=10)),
                ('is_transcribed', models.BooleanField(default=False)),
                ('entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='voice_notes', to='journals.journalentry')),
            ],
            options={
                'db_table': 'journal_voice_notes',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time at which the row was created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time at which the row was last updated', verbose_name='Updated At')),
                ('deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=50)),
                ('color', models.CharField(default='#3B82F6', max_length=7)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'tags',
                'ordering': ['name'],
                'unique_together': {('user', 'name')},
            },
        ),
        migrations.AddField(
            model_name='journalentry',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='journal_entries', to='journals.tag'),
        ),
        migrations.CreateModel(
            name='JournalPhoto',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time at which the row was created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time at which the row was last updated', verbose_name='Updated At')),
                ('deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to='journal_entries/photos/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'heic'])])),
                ('caption', models.CharField(blank=True, max_length=255)),
                ('order', models.IntegerField(default=0)),
                ('width', models.IntegerField(blank=True, null=True)),
                ('height', models.IntegerField(blank=True, null=True)),
                ('file_size', models.IntegerField(blank=True, null=True)),
                ('entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='journals.journalentry')),
            ],
            options={
                'db_table': 'journal_photos',
                'ordering': ['order', 'created_at'],
                'indexes': [models.Index(fields=['entry', 'order'], name='journal_pho_entry_i_261fcc_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='journalentry',
            index=models.Index(fields=['user', '-entry_date'], name='journal_ent_user_id_b8d859_idx'),
        ),
        migrations.AddIndex(
            model_name='journalentry',
            index=models.Index(fields=['user', 'is_favorite'], name='journal_ent_user_id_6c6e45_idx'),
        ),
        migrations.AddIndex(
            model_name='journalentry',
            index=models.Index(fields=['user', 'is_archived'], name='journal_ent_user_id_55b670_idx'),
        ),
    ]
